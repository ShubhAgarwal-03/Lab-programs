
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

void findLCS(const char *X, const char *Y, int m, int n) 
{
    
    int L[m + 1][n + 1];
    int i, j;

    for (i = 0; i <= m; i++) 
    {
        for (j = 0; j <= n; j++) 
        {
            if (i == 0 || j == 0) 
            {
                L[i][j] = 0;
            }
            else if (X[i - 1] == Y[j - 1]) 
            {
                L[i][j] = L[i - 1][j - 1] + 1;
            } 
            else 
            {
                L[i][j] = (L[i - 1][j] > L[i][j - 1]) ? L[i - 1][j] : L[i][j - 1];
            }
        }
    }

    int lcs_length = L[m][n];
    printf("%d\n", lcs_length);

    char lcs[lcs_length + 1];
    lcs[lcs_length] = '\0';
    i = m;
    j = n;
    while (i > 0 && j > 0)
    {
        if (X[i - 1] == Y[j - 1]) 
        {
            lcs[lcs_length - 1] = X[i - 1];
            i--;
            j--;
            lcs_length--;
        } 
        else if (L[i - 1][j] > L[i][j - 1])
        {
            i--;
        }
        else 
        {
            j--;
        }
    }
    printf("%s\n", lcs);
}

int main() {
    char X[1001], Y[1001];

    if (scanf("%1000s", X) != 1) 
    {
        fprintf(stderr, "Error reading string X\n");
        return 1;
    }
    
   

    if (scanf("%1000s", Y) != 1) 
    {
        fprintf(stderr, "Error reading string Y\n");
        return 1;
    }
    
    int m = strlen(X);
    int n = strlen(Y);
    

    findLCS(X, Y, m, n);

    return 0;
}
